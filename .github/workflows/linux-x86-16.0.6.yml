name: build-llvm-16.0.6-linux-x86
on:
  workflow_dispatch:
    branches: [ main ]
jobs:
  build-16-0-6-macos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup build deps
        run: |
          sudo wget -qO /usr/local/bin/ninja.gz https://github.com/ninja-build/ninja/releases/latest/download/ninja-linux.zip \
          && sudo gunzip /usr/local/bin/ninja.gz \
          && sudo chmod a+x /usr/local/bin/ninja \
          && sudo apt-get install build-essential make cmake
      - name: checkout llvm
        run: git clone --depth 1 --branch llvmorg-16.0.6 https://github.com/llvm/llvm-project $GITHUB_WORKSPACE/llvm-project
      - name: setup build
        run: |
          mkdir -p $GITHUB_WORKSPACE/llvm-project/build \
            && cd $GITHUB_WORKSPACE/llvm-project/build \
            && git checkout llvmorg-16.0.6 \
            && cmake -G "Ninja" -S ../llvm \
              -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/llvm16-0-6" \
              -DCMAKE_BUILD_TYPE="Release" \
              -DLLVM_TARGETS_TO_BUILD="X86" \
              -DLLVM_ENABLE_ASSERTIONS=ON \
              -DLLVM_ENABLE_PROJECTS="clang;" \
              -DLLVM_INCLUDE_TESTS=Off \
              -DLLVM_INCLUDE_EXAMPLES=Off \
              -DLLVM_OPTIMIZED_TABLEGEN=On \
            && ninja -C . install
      - name: package results
        run: |
          pushd $GITHUB_WORKSPACE/llvm16-0-6 \
            && tar -cJf $GITHUB_WORKSPACE/clang+llvm-16.0.6-x86_64-linux.tar.xz \
               . \
            && ls $GITHUB_WORKSPACE \
            && popd
      - uses: actions/upload-artifact@v3
        with:
          name: clang+llvm-16.0.6-x86_64-linux
          path: ${{ github.workspace }}/**/*.tar.xz
