name: build-linux
on:
  workflow_dispatch:
    inputs:
      llvm-version:
        required: true
        type: string
        description: ""
      ubuntu-version:
        required: true
        type: string
        description: ""
      arch:
        required: true
        type: string
        description: ""
  workflow_call:
    inputs:
      llvm-version:
        required: true
        type: string
      ubuntu-version:
        required: true
        type: string
      arch:
        required: true
        type: string
jobs:
  build:
    runs-on: ${{ inputs.ubuntu-version }}
    steps:
      - uses: actions/checkout@v3
      - name: setup build deps
        run: >-
          sudo wget -qO 
            /usr/local/bin/ninja.gz 
            https://github.com/ninja-build/ninja/releases/latest/download/ninja-linux.zip
          && sudo gunzip /usr/local/bin/ninja.gz
          && sudo chmod a+x /usr/local/bin/ninja
          && sudo apt-get install 
            build-essential
            make
            cmake
      - name: checkout llvm
        run: git clone --single-branch --depth 1 --branch llvmorg-${{ inputs.llvm-version }} https://github.com/llvm/llvm-project llvm
      - name: setup build
        run: |
          mkdir -p $GITHUB_WORKSPACE/llvm-project/build \
            && cd $GITHUB_WORKSPACE/llvm-project/build \
            && git checkout llvmorg-${{ inputs.llvm-version }} \
            && cmake -G "Ninja" -S ../llvm \
              -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/llvm16-0-6" \
              -DCMAKE_BUILD_TYPE="Release" \
              -DLLVM_TARGETS_TO_BUILD="X86" \
              -DLLVM_ENABLE_ASSERTIONS=ON \
              -DLLVM_ENABLE_PROJECTS="clang;" \
              -DLLVM_INCLUDE_TESTS=Off \
              -DLLVM_INCLUDE_EXAMPLES=Off \
              -DLLVM_OPTIMIZED_TABLEGEN=On \
            && ninja -C . install
      - name: package results
        run: |
          pushd $GITHUB_WORKSPACE/llvm16-0-6 \
            && tar -cJf $GITHUB_WORKSPACE/clang+llvm-${{ inputs.llvm-version }}-x86_64-linux.tar.xz \
               . \
            && ls $GITHUB_WORKSPACE \
            && popd
      - name: Upload Release
        uses: ncipollo/release-action@v1
        if: ${{ !github.event.pull_request }}
        with:
          allowUpdates: true
          tag: v${{ inputs.llvm-version }}
          name: ${{ inputs.llvm-version }}
          makeLatest: false
          artifacts: clang+llvm-${{ inputs.llvm-version }}-${{ inputs.arch }}-apple-darwin.tar.xz
